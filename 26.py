""""
Учитывая целочисленный массив nums, отсортированный в порядке неубывания, удалите дубликаты на месте таким образом,
 чтобы каждый уникальный элемент появлялся только один раз. Относительный порядок элементов должен оставаться
 неизменным. Затем верните количество уникальных элементов в nums.

Предположим, что количество уникальных элементов nums равно k, чтобы их приняли, вам нужно выполнить следующие действия:

Измените массив nums таким образом, чтобы первые k элементов nums содержали уникальные элементы в том порядке, в
котором они присутствовали в nums изначально. Остальные элементы nums не важны, так же как и размер nums.
Возвращает k

Example 1:

Input: nums = [1,1,2]
Output: 2, nums = [1,2,_]

Пояснение: Ваша функция должна возвращать k = 2, причем первые два элемента nums равны 1 и 2 соответственно.
Не имеет значения, что вы оставляете за пределами возвращаемого k (следовательно, это символы подчеркивания).
"""

nums = [1, 1, 2, 2, 2]


class Solution:
    def removeDuplicates(self, nums: list[int]) -> int:
        long_all = len(nums)
        nums[:] = sorted(set(nums))
        # long_nums = len(nums)
        # total_l = long_all - long_nums
        # nums.extend(nums[-1] * total_l)
        return len(nums)


sol = Solution()

print(sol.removeDuplicates(nums))
